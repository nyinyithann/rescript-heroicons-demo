// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as JsArray2Ex from "js-array2-ex/src/JsArray2Ex.bs.js";
import * as IconData$RescriptHeroiconsBindingDemo from "./IconData.bs.js";
import * as NotFound$RescriptHeroiconsBindingDemo from "./NotFound.bs.js";
import * as SearchInput$RescriptHeroiconsBindingDemo from "./SearchInput.bs.js";

function string(prim) {
  return prim;
}

function array(prim) {
  return prim;
}

var initialData = JsArray2Ex.map2(IconData$RescriptHeroiconsBindingDemo.solidIcons, IconData$RescriptHeroiconsBindingDemo.outlineIcons, (function (param, param$1) {
          return [
                  param[1],
                  param$1[1]
                ];
        })).reduce((function (acc, x) {
        var b = acc[1];
        var a = acc[0];
        a.push(x[0]);
        b.push(x[1]);
        return [
                a,
                b
              ];
      }), [
      [],
      []
    ]);

function IconDisplay(Props) {
  var match = React.useState(function () {
        return initialData;
      });
  var setIcons = match[1];
  var icons = match[0];
  var handleChange = function (e) {
    e.preventDefault();
    var searchTerm = e.target.value;
    var searchTerm$1 = searchTerm.toLowerCase();
    var solids = IconData$RescriptHeroiconsBindingDemo.solidIcons.filter(function (param) {
            return param[0].toLowerCase().includes(searchTerm$1);
          }).map(function (param) {
          return param[1];
        });
    var outlines = IconData$RescriptHeroiconsBindingDemo.outlineIcons.filter(function (param) {
            return param[0].toLowerCase().includes(searchTerm$1);
          }).map(function (param) {
          return param[1];
        });
    return Curry._1(setIcons, (function (param) {
                  return [
                          solids,
                          outlines
                        ];
                }));
  };
  var outlineIcons = icons[1];
  var solidIcons = icons[0];
  return React.createElement("div", {
              className: "flex flex-col gap-2"
            }, React.createElement(SearchInput$RescriptHeroiconsBindingDemo.make, {
                  placeholder: "Search icons by name",
                  className: "fixed inset-x-0 border-t border-b border-primary_300 text-primary_500 items-center h-12 md:h-10 pr-[20px] font-serif mb-4 z-40",
                  onChange: handleChange
                }), solidIcons.length === 0 && outlineIcons.length === 0 ? React.createElement(NotFound$RescriptHeroiconsBindingDemo.make, {}) : React.createElement("div", {
                    className: "flex flex-col md:flex-row h-full justify-between gap-[2px] pt-[56px] md:pt-[48px] z-0"
                  }, React.createElement("div", {
                        className: "icon-panel-container"
                      }, React.createElement("span", {
                            className: "icon-panel-header"
                          }, "Solid"), React.createElement("div", {
                            className: "icon-panel"
                          }, solidIcons)), React.createElement("div", {
                        className: "icon-panel-container"
                      }, React.createElement("span", {
                            className: "icon-panel-header"
                          }, "Outline"), React.createElement("div", {
                            className: "icon-panel"
                          }, outlineIcons))));
}

var JsString;

var make = IconDisplay;

export {
  JsString ,
  string ,
  array ,
  initialData ,
  make ,
  
}
/* initialData Not a pure module */
